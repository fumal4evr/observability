version: '3.8'

services:
  # First instance of the API
  api-instance-1:
    build: .
    container_name: observability-api-1
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - INSTANCE_NAME=instance-1
      - OTHER_SERVICE_URL=http://api-instance-2:8080
      - ZIPKIN_URL=http://zipkin:9411/api/v2/spans
    depends_on:
      - zipkin
      - prometheus
    networks:
      - observability-network

  # Second instance of the API
  api-instance-2:
    build: .
    container_name: observability-api-2
    ports:
      - "8081:8080"
    environment:
      - SERVER_PORT=8080
      - INSTANCE_NAME=instance-2
      - OTHER_SERVICE_URL=http://api-instance-1:8080
      - ZIPKIN_URL=http://zipkin:9411/api/v2/spans
    depends_on:
      - zipkin
      - prometheus
    networks:
      - observability-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - observability-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    depends_on:
      - prometheus
    networks:
      - observability-network

  # Zipkin for distributed tracing
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - observability-network

networks:
  observability-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
